name: CI
on:
  push:
  pull_request:
    types: [opened, reopened, synchronize]
  workflow_dispatch:

jobs:
  Detect-Changes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Lint NX workspace
        run: npx nx workspace-lint

      - name: Run NX format check
        run: npx nx format:check

      - name: Detect changed apps
        uses: gagle/nx-check-changes@v1.0.0
        id: nx-changes

    outputs:
      changed-apps: ${{ steps.nx-changes.outputs.changed-apps }}

  CI:
    runs-on: ubuntu-latest
    needs: [Detect-Changes]
    strategy:
      matrix:
        app: ${{ needs.Detect-Changes.outputs.changed-apps }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup nodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install npm dependencies (without scripts)
        run: npm i --ignore-scripts --no-audit --no-fund

      - name: Run npm scripts # Run scripts here to prevent access to NODE_AUTH_TOKEN
        run: npm rebuild && npm run prepare --if-present

      - name: Lint ${{ matrix.app }}
        run: npx nx lint ${{ matrix.app }}

      - name: Test ${{ matrix.app }}
        run: npx nx test ${{ matrix.app }}

      - name: Build ${{ matrix.app }}
        run: npx nx build --prod ${{ matrix.app }}

      - name: Get version from package.json
        uses: codex-team/action-nodejs-package-info@v1
        id: package-info

      - name: Create image tag for ${{ matrix.app }}
        run: echo "::set-output name=image-tag::detective.solutions/${{ matrix.app }}:${{ steps.package-info.outputs.version }}"
        id: image-tag

      - name: Build and push docker image for ${{ matrix.app }}
        uses: docker/build-push-action@v3
        with:
          file: ./apps/${{ matrix.app }}/docker/Dockerfile
          tags: ${{ steps.image-tag.outputs.image-tag}}
          push: false
