name: CI
on:
  push:
  workflow_dispatch:

concurrency:
  group: ${{github.workflow || github.ref_name}}
  cancel-in-progress: true

env:
  NODE_VERSION: 16
  DOCKER_REGISTRY: quay.io
  COMPANY_NAME: detective.solutions

jobs:
  Check-Affected-Files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup nodeJS
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: 'npm'
          cache-dependency-path: ./package-lock.json

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2

      - name: Install npm dependencies (without scripts)
        run: npm i --ignore-scripts --no-audit --no-fund

      - name: Run npm scripts # Run scripts here to prevent access to NODE_AUTH_TOKEN
        run: npm rebuild && npm run prepare --if-present

      # - name: Lint NX workspace
      #   run: npx nx workspace-lint

      - name: Check file formats
        run: npx nx format:check

      - name: Lint affected files
        run: npx nx affected --target=lint --parallel=3

      - name: Test affected files
        run: npx nx affected --target=test --parallel=3 --ci --code-coverage

  Detect-Changed-Apps:
    runs-on: ubuntu-latest
    needs: [Check-Affected-Files]

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Detect changed apps
        uses: detective-solutions/nx-check-changes@v1.0.0
        id: nx-changes

      - name: Print output
        run: echo ${{steps.convert-changed-apps.outputs.changed-apps}}

      # - name: Convert changed apps to array
      #   run: |
      #     echo ${{steps.nx-changes.outputs.changed-apps}}
      #     read -a array <<< "${{steps.nx-changes.outputs.changed-apps}}"
      #     echo ${array[@]}
      #     echo "::set-output name=changed-apps::${array[@]}"
      #   id: convert-changed-apps

    outputs:
      changed-apps: steps.convert-changed-apps.outputs.changed-apps

  Build-Affected-Apps:
    runs-on: ubuntu-latest
    needs: [Check-Affected-Files, Detect-Changed-Apps]
    strategy:
      matrix:
        app: ${{fromJSON(needs.Detect-Changed-Apps.outputs.changed-apps)}}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup nodeJS
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: 'npm'
          cache-dependency-path: ./package-lock.json

      - name: Install npm dependencies (without scripts)
        run: npm i --ignore-scripts --no-audit --no-fund

      - name: Run npm scripts # Run scripts here to prevent access to NODE_AUTH_TOKEN
        run: npm rebuild && npm run prepare --if-present

      - name: Build ${{matrix.app}}
        run: npx nx build ${{matrix.app}} --prod

      - name: Get version from package.json
        uses: codex-team/action-nodejs-package-info@v1
        id: package-info

      - name: Create image tag for ${{matrix.app}}
        run: |
          echo "::set-output name=image-tag::${{env.DOCKER_REGISTRY}}/${{env.COMPANY_NAME}}/${{matrix.app}}:${{steps.package-info.outputs.version}}"
        id: image-tag

      - name: Build and push docker image for ${{matrix.app}}
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./apps/${{matrix.app}}/docker/Dockerfile
          tags: ${{steps.image-tag.outputs.image-tag}}
          push: false
